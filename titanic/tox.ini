# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = test_package, typechecks, stylechecks, lint
skipdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_package]
deps =
    -rrequirements/test_requirements.txt

setenv =
    PYTHONPATH=.
    PYTHONHASHSEED=0

commands=
    python classification_model/train_pipeline.py
    pytest \
    -s \
    -vv \
    {posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
deps =
    {[testenv:test_package]deps}

setenv =
    {[testenv:test_package]setenv}

commands =
    python classification_model1/train_pipeline.py

[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
    {[testenv:test_package]deps}

commands = {posargs:mypy classification_model1}

[testenv:stylechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:flake8 classification_model1 tests}

[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
    isort classification_model1 tests
    black classification_model1 tests
    mypy classification_model1
    flake8 classification_model

[flake8]
exclude = .git,env
max-line-length = 90
